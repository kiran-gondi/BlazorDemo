@page "/learnBlazor/DemoProduct"

<PageTitle>Demo Product</PageTitle>

<h2 class="border p-2 mt-2 bg-secondary">Demo Product</h2>

<div class="p-2 mt-2">
    <div class="row">
        @foreach (var product in Products)
        {
            <div class="bg-light border col-6">
                <h4 class="text-secondary">Product - @product.Id</h4>
                Name: @product.Name 
                <br />
                Show Properties: <input type="checkbox" @bind="@product.IsActive"/>

                @if (@product.IsActive)
                {
                    foreach (var productPropertiesItem in product.ProductProperties)
                    {
                        <p>@productPropertiesItem.Key - @productPropertiesItem.Value</p>
                    }
                }
                <br />
                <input type="button" class="btn btn-danger" style="width: 100px" value="Delete" 
                @onclick="()=> RemoveProduct(product.Id)"/>
            </div>
        }
    </div>

    <div class="row pt-4">
        <input type="button" class="btn btn-success" style="width: 100px" value="Counter" 
        @onclick="() => IncrementCount(5)"/>
        Counter: @Count
    </div>

</div>

@code {
    public int Count { get; set; } = 0;

    List<Product> Products = new();

    protected override void OnInitialized()
    {
        Products.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                Price = 5.99,
                ProductProperties = new List<Product_Prop>()
                {
                    new Product_Prop { Id = 1, Key = "Flavor", Value = "Rose"},
                    new Product_Prop { Id = 2, Key = "Size", Value = "20oz"},
                    new Product_Prop { Id = 3, Key = "Color", Value="Purple" }
                }
            });

        Products.Add(new()
            {
                Id = 2,
                Name = "Blossom Lily",
                IsActive = true,
                Price = 66.7,
                ProductProperties = new List<Product_Prop>()
                {
                    new Product_Prop { Id = 1, Key = "Flavor", Value = "Lily" },
                    new Product_Prop { Id = 2, Key = "Size", Value = "18oz" },
                    new Product_Prop {Id = 3,Key = "Color",Value = "White"}
                }
            });

    }

    private void IncrementCount(int counter)
    {
        Count += counter;
    }

    private void RemoveProduct(int productId)
    {
        var prod = Products.FirstOrDefault(x => x.Id == productId);
        if(prod != null)
            Products.Remove(prod);
    }
}
